// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  nama        String        @db.VarChar(255)
  nip         String
  alamat      String        @db.Text
  email       String
  password    String        @db.VarChar(255)
  hp          String
  profilePic  String
  role        Role          @default(Staff)
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)

  transaksi   Transaksi[]   @relation("UserToTransaksi")

  @@map("users")
}

model Spp {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  tahunAjaran String
  spp         BigInt        @db.UnsignedBigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       SppSiswa[]    @relation("SppToSiswa")
  detail      Detail[]      @relation("SppToDetail")

  @@map("spp")
}

model Kelas {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  namaKelas   String        @db.VarChar(10)
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       Siswa[]       @relation("KelasToSiswa")

  @@map("kelas")
}

model Siswa {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  nama        String        @db.VarChar(255)
  nis         String
  jk          JenisKelamin
  kelasId     BigInt        @db.UnsignedBigInt @map("kelas_id")
  angkatan    BigInt
  hp          String
  diskonId    BigInt        @db.UnsignedBigInt @map("diskon_id")
  createdAt   DateTime?     @db.Timestamp() @default(now())
  updatedAt   DateTime?     @db.Timestamp()
  deletedAt   DateTime?     @db.Timestamp()

  kelas       Kelas         @relation("KelasToSiswa", fields: [kelasId], references: [id])
  diskon      Diskon        @relation("DiskonToSiswa", fields: [diskonId], references: [id])

  transaksi   Transaksi[]   @relation("SiswaToTransaksi")
  spp         SppSiswa[]    @relation("SiswaToSpp")

  @@map("siswa")
}

model SppSiswa {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  siswaId     BigInt        @db.UnsignedBigInt @map("siswa_id")
  sppId       BigInt        @db.UnsignedBigInt @map("spp_id")
  createdAt   DateTime?     @db.Timestamp() @default(now())
  updatedAt   DateTime?     @db.Timestamp()
  deletedAt   DateTime?     @db.Timestamp()

  siswa       Siswa         @relation("SiswaToSpp", fields: [siswaId], references: [id])
  spp         Spp           @relation("SppToSiswa", fields: [sppId], references: [id])

  @@map("spp_siswa")
}

model Transaksi {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  siswaId     BigInt        @db.UnsignedBigInt @map("siswa_id")
  userId      BigInt        @db.UnsignedBigInt @map("user_id")
  tanggal     DateTime      @db.Date
  totalBayar  BigInt
  bulan       String
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       Siswa         @relation("SiswaToTransaksi", fields: [siswaId], references: [id])
  user        User          @relation("UserToTransaksi", fields: [userId], references: [id])

  detail      Detail[]      @relation("TransaksiToDetail")

  @@map("transaksi")
}

model Detail {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  transaksiId BigInt        @db.UnsignedBigInt @map("transaksi_id")
  sppId       BigInt        @db.UnsignedBigInt @map("spp_id")
  jumlahBayar BigInt
  sisa        BigInt
  keterangan  String
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  transaksi   Transaksi     @relation("TransaksiToDetail", fields: [transaksiId], references: [id])
  spp         Spp           @relation("SppToDetail", fields: [sppId], references: [id])
  
  @@map("details")
}

model Diskon {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  potongan    BigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       Siswa[]       @relation("DiskonToSiswa")

  @@map("diskon")
}

enum Role {
  Staff
  Admin
}

enum JenisKelamin {
  LakiLaki
  Perempuan
}
