// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  nama        String        @db.VarChar(255)
  nip         String
  alamat      String        @db.Text
  jk          JenisKelamin
  email       String
  password    String        @db.VarChar(255)
  hp          String
  foto        String?       @db.VarChar(255)
  role        Role          @default(Staff)
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  transaksi   Transaksi[]   @relation("UserToTransaksi")

  @@map("users")
}

model TahunAjar {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  tahun       String        @unique
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  kelas       KelasSiswa[]  @relation("TahunToKelas")
  spp         Spp[]         @relation("TahunToSpp")
}

model Spp {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  tahunAjarId BigInt        @db.UnsignedBigInt
  spp         BigInt        @db.UnsignedBigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  transaksi   Transaksi[]   @relation("SppToTransaksi")

  tahunAjar   TahunAjar     @relation("TahunToSpp", fields: [tahunAjarId], references: [id], onDelete: Cascade)

  @@map("spp")
}

model Kelas {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  namaKelas   String        @db.VarChar(10)
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       KelasSiswa[]  @relation("KelasToSiswa")

  @@map("kelas")
}

model Siswa {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  nama        String        @db.VarChar(255)
  nis         String
  nisn        String
  password    String?       @db.VarChar(255)
  foto        String?       @db.VarChar(255)
  alamat      String        @db.Text
  jk          JenisKelamin
  angkatan    BigInt
  hp          String
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  kelas       KelasSiswa[]  @relation("SiswaToKelas")
  transaksi   Transaksi[]   @relation("SiswaToTransaksi")
  diskon      DiskonSiswa[] @relation("SiswaToDiskon")

  @@map("siswa")
}

model KelasSiswa {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  siswaId     BigInt        @db.UnsignedBigInt
  kelasId     BigInt        @db.UnsignedBigInt
  tahunAjarId BigInt        @db.UnsignedBigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  kelas       Kelas         @relation("KelasToSiswa", fields: [kelasId], references: [id], onDelete: Cascade)
  siswa       Siswa         @relation("SiswaToKelas", fields: [siswaId], references: [id], onDelete: Cascade)
  tahunAjar   TahunAjar     @relation("TahunToKelas", fields: [tahunAjarId], references: [id], onDelete: Cascade)

  @@unique([siswaId, tahunAjarId])
}

model DiskonSiswa {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  siswaId     BigInt        @db.UnsignedBigInt
  diskonId    BigInt        @db.UnsignedBigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  diskon      Diskon        @relation("DiskonToSiswa", fields: [diskonId], references: [id], onDelete: Cascade)
  siswa       Siswa         @relation("SiswaToDiskon", fields: [siswaId], references: [id], onDelete: Cascade)
}

model Transaksi {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  siswaId     BigInt        @db.UnsignedBigInt
  userId      BigInt        @db.UnsignedBigInt
  sppId       BigInt        @db.UnsignedBigInt
  tanggal     DateTime      @db.Date
  totalBayar  BigInt
  bulan       String
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       Siswa         @relation("SiswaToTransaksi", fields: [siswaId], references: [id], onDelete: Cascade)
  user        User          @relation("UserToTransaksi", fields: [userId], references: [id], onDelete: Cascade)
  spp         Spp           @relation("SppToTransaksi", fields: [sppId], references: [id], onDelete: Cascade)

  @@map("transaksi")
}

model Diskon {
  id          BigInt        @id @db.UnsignedBigInt @default(autoincrement())
  potongan    BigInt
  createdAt   DateTime?     @db.Timestamp(0) @default(now())
  updatedAt   DateTime?     @db.Timestamp(0)
  deletedAt   DateTime?     @db.Timestamp(0)

  siswa       DiskonSiswa[] @relation("DiskonToSiswa")

  @@map("diskon")
}

enum Role {
  Staff
  Admin
}

enum JenisKelamin {
  LakiLaki
  Perempuan
}